<project name="opponents" default="compile" basedir=".">
	<property name="sources.dir" value="src" />
	<property name="scala-source.dir" value="src" />
	<property name="scala-test.dir" value="test" />
	<property name="build.dir" value="classes" />
	<property environment="env" />
	<property name="scala.home" value="${env.SCALA_HOME}" />
	<property name = "ant.home" value = "${env.ANT_HOME}" />
	<property name="src.dir" location="${basedir}/src"/>
	<property name="lib.dir" location="${basedir}/lib"/>
	<property name="build-lib.dir" location="${build.dir}/lib"/>
	<property name="build-doc.dir" location="${build.dir}/doc"/>
	<property name="java.dir" location="${env.JAVA_HOME}"/>
	<property name="scala.dir" location="${env.SCALA_HOME}"/>
	<property name="scala-library.jar" location="${scala.dir}/lib/scala-library.jar"/>
	<property name="scala-reflect.jar" location="${scala.dir}/lib/scala-reflect.jar"/>
	<property name="scala-compiler.jar" location="${scala.dir}/lib/scala-compiler.jar"/>
	<property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar" />
	<property name="report.dir" value="report"/>
	<property name="junit.dir" value="${report.dir}/junit"/>
	<path id="project.classpath">
		<pathelement location="${scala-library.jar}"/>
		<pathelement location="${build.dir}"/>
		<!-- used during recompilation -->
	</path>
	<path id="build.classpath">
		<pathelement location="${scala-library.jar}"   />
		<!--<pathelement location="${your.path}"   />-->
		<pathelement location="${build.dir}"   />
	</path>
	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${scala.home}/lib/scala-compiler.jar"   />
			<!-- NEW: For scala 2.10.2 you need scala-reflect: -->
			<pathelement location="${scala.home}/lib/scala-reflect.jar"   />
			<pathelement location="${scala-library.jar}"   />
		</classpath>
	</taskdef>
	<path id="hamcrest.classpath">
		<pathelement location="${ant.home}/lib/hamcrest-core-1.3.jar"/>
	</path>
	<!--   Directory for JavaDoc output -->
	<property name="doc.dir" value="doc"/>

	<target name="init">
		<!-- print where this project will get scala and java from -->
		<echo message="Init project"/>
		<echo message=" with scala.dir = ${env.SCALA_HOME}"/>
		<echo message=" with java.dir = ${env.JAVA_HOME}"/>
		<property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar" />
		<path id="build.classpath">
			<pathelement location="${scala-library.jar}"   />
			<!--<pathelement location="${your.path}"   />-->
			<pathelement location="${build.dir}"   />
		</path>
		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath>
				<pathelement location="${scala.home}/lib/scala-compiler.jar"   />
				<!-- NEW: For scala 2.10.2 you need scala-reflect: -->
				<pathelement location="${scala.home}/lib/scala-reflect.jar"   />
				<pathelement location="${scala-library.jar}"   />
			</classpath>
		</taskdef>
	</target>


	<target name="build" depends="compile">
		<!-- Just calls compile -->
		<!--  unless="build.uptodate" -->

	</target>


	<target name="compile" depends="init">
		<mkdir dir="${build.dir}"/>
		<scalac
			destdir="${build.dir}"
			classpath="${ant.home}/lib/"
			classpathref="project.classpath">
			<include name="*.scala"/>
			<src>
				<pathelement location="${src.dir}"/>
			</src>
		</scalac>
	</target>



	<target  name="scaladoc" depends="build">
		<mkdir dir="${basedir}/doc"> </mkdir>
		<scaladoc
			srcdir="${src.dir}"
			destdir="${basedir}/doc"
			doctitle="ScalaDoc"
			classpathref="project.classpath">
			<include name="*.scala"/>
		</scaladoc>


	</target> 

	<target name="test" depends="build">
		<path id="dyna.jars">
			<fileset dir="${scala.dir}/lib">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${ant.home}/lib/">
				<include name="**/*.jar"/>
			</fileset>

		</path>
		<mkdir dir="${report.dir}"/>
		<mkdir dir="${junit.dir}"/>
		<junit fork="yes" includeAntRuntime="yes" printsummary="withOutAndErr">
			<formatter type="xml"/>
			<batchtest fork="yes" filtertrace="off" todir="${junit.dir}">
				<fileset dir="${build.dir}" includes="**/*Test.class"/>
			</batchtest>

			<classpath refid="dyna.jars"/>
			<classpath path="${build.dir}"/>
		</junit>
		<junitreport todir="${junit.dir}">
			<fileset dir="${junit.dir}" includes="TEST-*.xml"/>
			<report todir="${junit.dir}"/>
		</junitreport>
	</target>
</project>